/*-
 * WSDL stubs for:  mappoint.wsdl
 *   Generated by:  michael
 *           Date:  Tue Apr 15 01:52:56 2008
 *        Emitter:  Objective-C
 */

#ifndef __MapPoint__
#define __MapPoint__

#import <CoreServices/CoreServices.h>
#import <Foundation/Foundation.h>
#import "WSGeneratedObj.h"

/*-
 *   Web Service:  RenderService
 * Documentation:  The render service allows you to render maps of routes and found
 *                 locations, place pushpins (using the MapPoint Web Service stock set
 *                 of icons or your icons that we host for your use), set the map size
 *                 and map view, select points on a map, get location information
 *                 about points on a map, pan and zoom a rendered map, and create
 *                 clickable maps.
 */
/*-
 *   Method Name:  ConvertToPoint
 * Documentation:  Convert individual LatLongs into PixelCoords as they would appear
 *                 in the given MapView
 */

@interface ConvertToPoint : WSGeneratedObj

// update the parameter list for the invocation.
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|ConvertToPoint */) in_parameters;

// result returns an id from the reply dictionary as specified by the WSDL.
- (id) resultValue;

@end; /* ConvertToPoint */


/*-
 *   Method Name:  GetMap
 * Documentation:  Renders map images of the given MapViews
 */

@interface GetMap : WSGeneratedObj

// update the parameter list for the invocation.
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|GetMap */) in_parameters;

// result returns an id from the reply dictionary as specified by the WSDL.
- (id) resultValue;

@end; /* GetMap */


/*-
 *   Method Name:  GetLineDriveMap
 * Documentation:  Renders LineDrive map images of the given Route
 */

@interface GetLineDriveMap : WSGeneratedObj

// update the parameter list for the invocation.
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|GetLineDriveMap */) in_parameters;

// result returns an id from the reply dictionary as specified by the WSDL.
- (id) resultValue;

@end; /* GetLineDriveMap */


/*-
 *   Method Name:  GetBestMapView
 * Documentation:  Get a MapView that encompasses the given locations
 */

@interface GetBestMapView : WSGeneratedObj

// update the parameter list for the invocation.
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|GetBestMapView */) in_parameters;

// result returns an id from the reply dictionary as specified by the WSDL.
- (id) resultValue;

@end; /* GetBestMapView */


/*-
 *   Method Name:  ConvertToLatLong
 * Documentation:  Convert individual PixelCoords into LatLongs as they would appear
 *                 in the given MapView
 */

@interface ConvertToLatLong : WSGeneratedObj

// update the parameter list for the invocation.
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|ConvertToLatLong */) in_parameters;

// result returns an id from the reply dictionary as specified by the WSDL.
- (id) resultValue;

@end; /* ConvertToLatLong */


/*-
 * Web Service:  RenderService
 */
@interface RenderService : NSObject 

+ (id) ConvertToPoint:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|ConvertToPoint */) in_parameters;
+ (id) GetMap:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|GetMap */) in_parameters;
+ (id) GetLineDriveMap:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|GetLineDriveMap */) in_parameters;
+ (id) GetBestMapView:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|GetBestMapView */) in_parameters;
+ (id) ConvertToLatLong:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|ConvertToLatLong */) in_parameters;

@end;

/*-
 *   Web Service:  CommonService
 * Documentation:  The common service contains classes, methods, and properties that
 *                 are common to the find, route, and render services.  The common
 *                 service also provides basic utility functions that can be used in
 *                 the Microsoft MapPoint Web Service applications.</p><p
 *                 class="intro">Read the <a href="default.htm">formal description</a>
 *                 of the MapPoint Web Service for more information.
 */
/*-
 *   Method Name:  GetEntityTypes
 * Documentation:  Retrieve the list types and their properties in a DataSource.
 */

@interface GetEntityTypes : WSGeneratedObj

// update the parameter list for the invocation.
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|GetEntityTypes */) in_parameters;

// result returns an id from the reply dictionary as specified by the WSDL.
- (id) resultValue;

@end; /* GetEntityTypes */


/*-
 *   Method Name:  GetClientToken
 * Documentation:  Gets a token for use with VE authentication.
 */

@interface GetClientToken : WSGeneratedObj

// update the parameter list for the invocation.
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|GetClientToken */) in_parameters;

// result returns an id from the reply dictionary as specified by the WSDL.
- (id) resultValue;

@end; /* GetClientToken */


/*-
 *   Method Name:  GetDataSourceInfo
 * Documentation:  Get a general description of data sources.
 */

@interface GetDataSourceInfo : WSGeneratedObj

// update the parameter list for the invocation.
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|GetDataSourceInfo */) in_parameters;

// result returns an id from the reply dictionary as specified by the WSDL.
- (id) resultValue;

@end; /* GetDataSourceInfo */


/*-
 *   Method Name:  GetVersionInfo
 * Documentation:  Get the MapPoint Web Service version.
 */

@interface GetVersionInfo : WSGeneratedObj

// update the parameter list for the invocation.
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|GetVersionInfo */) in_parameters;

// result returns an id from the reply dictionary as specified by the WSDL.
- (id) resultValue;

@end; /* GetVersionInfo */


/*-
 *   Method Name:  GetGreatCircleDistances
 * Documentation:  Calculate pair-wise distances 
 */

@interface GetGreatCircleDistances : WSGeneratedObj

// update the parameter list for the invocation.
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|GetGreatCircleDistances */) in_parameters;

// result returns an id from the reply dictionary as specified by the WSDL.
- (id) resultValue;

@end; /* GetGreatCircleDistances */


/*-
 *   Method Name:  GetCountryRegionInfo
 * Documentation:  Retrieve information about countries or national regions.
 */

@interface GetCountryRegionInfo : WSGeneratedObj

// update the parameter list for the invocation.
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|GetCountryRegionInfo */) in_parameters;

// result returns an id from the reply dictionary as specified by the WSDL.
- (id) resultValue;

@end; /* GetCountryRegionInfo */


/*-
 * Web Service:  CommonService
 */
@interface CommonService : NSObject 

+ (id) GetEntityTypes:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|GetEntityTypes */) in_parameters;
+ (id) GetClientToken:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|GetClientToken */) in_parameters;
+ (id) GetDataSourceInfo:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|GetDataSourceInfo */) in_parameters;
+ (id) GetVersionInfo:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|GetVersionInfo */) in_parameters;
+ (id) GetGreatCircleDistances:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|GetGreatCircleDistances */) in_parameters;
+ (id) GetCountryRegionInfo:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|GetCountryRegionInfo */) in_parameters;

@end;

/*-
 *   Web Service:  FindService
 * Documentation:  The Find service allows you to locate addresses, places,
 *                 latitude/longitude coordinates, and points of interest (from either
 *                 MapPoint Web Service data or your data that we host for your use).
 */
/*-
 *   Method Name:  FindAddress
 * Documentation:  Finds a list of addresses that match the input address.
 */

@interface FindAddress : WSGeneratedObj

// update the parameter list for the invocation.
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|FindAddress */) in_parameters;

// result returns an id from the reply dictionary as specified by the WSDL.
- (id) resultValue;

@end; /* FindAddress */


/*-
 *   Method Name:  FindNearRoute
 * Documentation:  Finds points of interest locations within a specified distance from
 *                 a route.
 */

@interface FindNearRoute : WSGeneratedObj

// update the parameter list for the invocation.
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|FindNearRoute */) in_parameters;

// result returns an id from the reply dictionary as specified by the WSDL.
- (id) resultValue;

@end; /* FindNearRoute */


/*-
 *   Method Name:  Find
 * Documentation:  Finds places based on the find options.
 */

@interface Find : WSGeneratedObj

// update the parameter list for the invocation.
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|Find */) in_parameters;

// result returns an id from the reply dictionary as specified by the WSDL.
- (id) resultValue;

@end; /* Find */


/*-
 *   Method Name:  GetLocationInfo
 * Documentation:  Searches around a LatLong for nearest addresses and entities.
 */

@interface GetLocationInfo : WSGeneratedObj

// update the parameter list for the invocation.
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|GetLocationInfo */) in_parameters;

// result returns an id from the reply dictionary as specified by the WSDL.
- (id) resultValue;

@end; /* GetLocationInfo */


/*-
 *   Method Name:  FindByProperty
 * Documentation:  Finds points of interest based on pre-defined or custom properties.
 *                 This method is independent of the location information such as
 *                 distance and latitude/logitude.
 */

@interface FindByProperty : WSGeneratedObj

// update the parameter list for the invocation.
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|FindByProperty */) in_parameters;

// result returns an id from the reply dictionary as specified by the WSDL.
- (id) resultValue;

@end; /* FindByProperty */


/*-
 *   Method Name:  ParseAddress
 * Documentation:  Parses Address.FormattedAddress into its component Address pieces.
 */

@interface ParseAddress : WSGeneratedObj

// update the parameter list for the invocation.
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|ParseAddress */) in_parameters;

// result returns an id from the reply dictionary as specified by the WSDL.
- (id) resultValue;

@end; /* ParseAddress */


/*-
 *   Method Name:  FindNearby
 * Documentation:  Find a list of POI, within a circle around a lat/long.
 */

@interface FindNearby : WSGeneratedObj

// update the parameter list for the invocation.
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|FindNearby */) in_parameters;

// result returns an id from the reply dictionary as specified by the WSDL.
- (id) resultValue;

@end; /* FindNearby */


/*-
 *   Method Name:  FindByID
 * Documentation:  Finds points of interest for a given entity ID.
 */

@interface FindByID : WSGeneratedObj

// update the parameter list for the invocation.
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|FindByID */) in_parameters;

// result returns an id from the reply dictionary as specified by the WSDL.
- (id) resultValue;

@end; /* FindByID */


/*-
 *   Method Name:  FindPolygon
 * Documentation:  Finds polygons containing a point or intersecting a rectangle.
 */

@interface FindPolygon : WSGeneratedObj

// update the parameter list for the invocation.
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|FindPolygon */) in_parameters;

// result returns an id from the reply dictionary as specified by the WSDL.
- (id) resultValue;

@end; /* FindPolygon */


/*-
 * Web Service:  FindService
 */
@interface FindService : NSObject 

+ (id) FindAddress:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|FindAddress */) in_parameters;
+ (id) FindNearRoute:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|FindNearRoute */) in_parameters;
+ (id) Find:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|Find */) in_parameters;
+ (id) GetLocationInfo:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|GetLocationInfo */) in_parameters;
+ (id) FindByProperty:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|FindByProperty */) in_parameters;
+ (id) ParseAddress:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|ParseAddress */) in_parameters;
+ (id) FindNearby:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|FindNearby */) in_parameters;
+ (id) FindByID:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|FindByID */) in_parameters;
+ (id) FindPolygon:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|FindPolygon */) in_parameters;

@end;

/*-
 *   Web Service:  RouteService
 * Documentation:  The route service allows you to generate routes, driving
 *                 directions, and calculated route representations (used to render a
 *                 highlighted route on the map) based on locations or waypoints, set
 *                 segment and route preferences, and generate map views of segments
 *                 and directions.
 */
/*-
 *   Method Name:  CalculateSimpleRoute
 * Documentation:  <no documentation>
 */

@interface CalculateSimpleRoute : WSGeneratedObj

// update the parameter list for the invocation.
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|CalculateSimpleRoute */) in_parameters;

// result returns an id from the reply dictionary as specified by the WSDL.
- (id) resultValue;

@end; /* CalculateSimpleRoute */


/*-
 *   Method Name:  CalculateRoute
 * Documentation:  <no documentation>
 */

@interface CalculateRoute : WSGeneratedObj

// update the parameter list for the invocation.
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|CalculateRoute */) in_parameters;

// result returns an id from the reply dictionary as specified by the WSDL.
- (id) resultValue;

@end; /* CalculateRoute */


/*-
 * Web Service:  RouteService
 */
@interface RouteService : NSObject 

+ (id) CalculateSimpleRoute:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|CalculateSimpleRoute */) in_parameters;
+ (id) CalculateRoute:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|CalculateRoute */) in_parameters;

@end;


#endif /* __MapPoint__ */
/*-
 * End of WSDL document at mappoint.wsdl
 */
