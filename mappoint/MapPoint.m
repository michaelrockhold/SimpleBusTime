/*-
 * WSDL stubs for:  mappoint.wsdl
 *   Generated by:  michael
 *           Date:  Tue Apr 15 01:52:56 2008
 *        Emitter:  Objective-C
 */

#import "MapPoint.h"

/*-
 *   Method Name:  ConvertToPoint
 * Documentation:  Convert individual LatLongs into PixelCoords as they would appear
 *                 in the given MapView
 */
@implementation ConvertToPoint
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|ConvertToPoint */) in_parameters
{
    id _paramValues[] = {    
        in_parameters,        
    };    
    NSString* _paramNames[] = {    
        @"parameters",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"parameters"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://renderv3.staging.mappoint.net/Render-30/RenderService.asmx"            
                 methodName: @"ConvertToPoint"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://s.mappoint.net/mappoint-30/ConvertToPoint"            
            methodNamespace: NULL /* No Method Namespace specified */            
        ];        
}

@end; /* ConvertToPoint */


/*-
 *   Method Name:  GetMap
 * Documentation:  Renders map images of the given MapViews
 */
@implementation GetMap
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|GetMap */) in_parameters
{
    id _paramValues[] = {    
        in_parameters,        
    };    
    NSString* _paramNames[] = {    
        @"parameters",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"parameters"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://renderv3.staging.mappoint.net/Render-30/RenderService.asmx"            
                 methodName: @"GetMap"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://s.mappoint.net/mappoint-30/GetMap"            
            methodNamespace: NULL /* No Method Namespace specified */            
        ];        
}

@end; /* GetMap */


/*-
 *   Method Name:  GetLineDriveMap
 * Documentation:  Renders LineDrive map images of the given Route
 */
@implementation GetLineDriveMap
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|GetLineDriveMap */) in_parameters
{
    id _paramValues[] = {    
        in_parameters,        
    };    
    NSString* _paramNames[] = {    
        @"parameters",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"parameters"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://renderv3.staging.mappoint.net/Render-30/RenderService.asmx"            
                 methodName: @"GetLineDriveMap"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://s.mappoint.net/mappoint-30/GetLineDriveMap"            
            methodNamespace: NULL /* No Method Namespace specified */            
        ];        
}

@end; /* GetLineDriveMap */


/*-
 *   Method Name:  GetBestMapView
 * Documentation:  Get a MapView that encompasses the given locations
 */
@implementation GetBestMapView
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|GetBestMapView */) in_parameters
{
    id _paramValues[] = {    
        in_parameters,        
    };    
    NSString* _paramNames[] = {    
        @"parameters",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"parameters"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://renderv3.staging.mappoint.net/Render-30/RenderService.asmx"            
                 methodName: @"GetBestMapView"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://s.mappoint.net/mappoint-30/GetBestMapView"            
            methodNamespace: NULL /* No Method Namespace specified */            
        ];        
}

@end; /* GetBestMapView */


/*-
 *   Method Name:  ConvertToLatLong
 * Documentation:  Convert individual PixelCoords into LatLongs as they would appear
 *                 in the given MapView
 */
@implementation ConvertToLatLong
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|ConvertToLatLong */) in_parameters
{
    id _paramValues[] = {    
        in_parameters,        
    };    
    NSString* _paramNames[] = {    
        @"parameters",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"parameters"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://renderv3.staging.mappoint.net/Render-30/RenderService.asmx"            
                 methodName: @"ConvertToLatLong"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://s.mappoint.net/mappoint-30/ConvertToLatLong"            
            methodNamespace: NULL /* No Method Namespace specified */            
        ];        
}

@end; /* ConvertToLatLong */



@implementation RenderService

+ (id) ConvertToPoint:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|ConvertToPoint */) in_parameters
{
    id result = NULL;    
    ConvertToPoint* _invocation = [[ConvertToPoint alloc] init];    
    [_invocation setParameters: in_parameters];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) GetMap:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|GetMap */) in_parameters
{
    id result = NULL;    
    GetMap* _invocation = [[GetMap alloc] init];    
    [_invocation setParameters: in_parameters];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) GetLineDriveMap:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|GetLineDriveMap */) in_parameters
{
    id result = NULL;    
    GetLineDriveMap* _invocation = [[GetLineDriveMap alloc] init];    
    [_invocation setParameters: in_parameters];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) GetBestMapView:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|GetBestMapView */) in_parameters
{
    id result = NULL;    
    GetBestMapView* _invocation = [[GetBestMapView alloc] init];    
    [_invocation setParameters: in_parameters];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) ConvertToLatLong:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|ConvertToLatLong */) in_parameters
{
    id result = NULL;    
    ConvertToLatLong* _invocation = [[ConvertToLatLong alloc] init];    
    [_invocation setParameters: in_parameters];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}



@end;

/*-
 *   Method Name:  GetEntityTypes
 * Documentation:  Retrieve the list types and their properties in a DataSource.
 */
@implementation GetEntityTypes
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|GetEntityTypes */) in_parameters
{
    id _paramValues[] = {    
        in_parameters,        
    };    
    NSString* _paramNames[] = {    
        @"parameters",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"parameters"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://findv3.staging.mappoint.net/Find-30/Common.asmx"            
                 methodName: @"GetEntityTypes"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://s.mappoint.net/mappoint-30/GetEntityTypes"            
            methodNamespace: NULL /* No Method Namespace specified */            
        ];        
}

@end; /* GetEntityTypes */


/*-
 *   Method Name:  GetClientToken
 * Documentation:  Gets a token for use with VE authentication.
 */
@implementation GetClientToken
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|GetClientToken */) in_parameters
{
    id _paramValues[] = {    
        in_parameters,        
    };    
    NSString* _paramNames[] = {    
        @"parameters",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"parameters"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://findv3.staging.mappoint.net/Find-30/Common.asmx"            
                 methodName: @"GetClientToken"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://s.mappoint.net/mappoint-30/GetClientToken"            
            methodNamespace: NULL /* No Method Namespace specified */            
        ];        
}

@end; /* GetClientToken */


/*-
 *   Method Name:  GetDataSourceInfo
 * Documentation:  Get a general description of data sources.
 */
@implementation GetDataSourceInfo
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|GetDataSourceInfo */) in_parameters
{
    id _paramValues[] = {    
        in_parameters,        
    };    
    NSString* _paramNames[] = {    
        @"parameters",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"parameters"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://findv3.staging.mappoint.net/Find-30/Common.asmx"            
                 methodName: @"GetDataSourceInfo"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://s.mappoint.net/mappoint-30/GetDataSourceInfo"            
            methodNamespace: NULL /* No Method Namespace specified */            
        ];        
}

@end; /* GetDataSourceInfo */


/*-
 *   Method Name:  GetVersionInfo
 * Documentation:  Get the MapPoint Web Service version.
 */
@implementation GetVersionInfo
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|GetVersionInfo */) in_parameters
{
    id _paramValues[] = {    
        in_parameters,        
    };    
    NSString* _paramNames[] = {    
        @"parameters",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"parameters"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://findv3.staging.mappoint.net/Find-30/Common.asmx"            
                 methodName: @"GetVersionInfo"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://s.mappoint.net/mappoint-30/GetVersionInfo"            
            methodNamespace: NULL /* No Method Namespace specified */            
        ];        
}

@end; /* GetVersionInfo */


/*-
 *   Method Name:  GetGreatCircleDistances
 * Documentation:  Calculate pair-wise distances 
 */
@implementation GetGreatCircleDistances
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|GetGreatCircleDistances */) in_parameters
{
    id _paramValues[] = {    
        in_parameters,        
    };    
    NSString* _paramNames[] = {    
        @"parameters",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"parameters"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://findv3.staging.mappoint.net/Find-30/Common.asmx"            
                 methodName: @"GetGreatCircleDistances"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://s.mappoint.net/mappoint-30/GetGreatCircleDistances"            
            methodNamespace: NULL /* No Method Namespace specified */            
        ];        
}

@end; /* GetGreatCircleDistances */


/*-
 *   Method Name:  GetCountryRegionInfo
 * Documentation:  Retrieve information about countries or national regions.
 */
@implementation GetCountryRegionInfo
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|GetCountryRegionInfo */) in_parameters
{
    id _paramValues[] = {    
        in_parameters,        
    };    
    NSString* _paramNames[] = {    
        @"parameters",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"parameters"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://findv3.staging.mappoint.net/Find-30/Common.asmx"            
                 methodName: @"GetCountryRegionInfo"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://s.mappoint.net/mappoint-30/GetCountryRegionInfo"            
            methodNamespace: NULL /* No Method Namespace specified */            
        ];        
}

@end; /* GetCountryRegionInfo */



@implementation CommonService

+ (id) GetEntityTypes:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|GetEntityTypes */) in_parameters
{
    id result = NULL;    
    GetEntityTypes* _invocation = [[GetEntityTypes alloc] init];    
    [_invocation setParameters: in_parameters];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) GetClientToken:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|GetClientToken */) in_parameters
{
    id result = NULL;    
    GetClientToken* _invocation = [[GetClientToken alloc] init];    
    [_invocation setParameters: in_parameters];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) GetDataSourceInfo:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|GetDataSourceInfo */) in_parameters
{
    id result = NULL;    
    GetDataSourceInfo* _invocation = [[GetDataSourceInfo alloc] init];    
    [_invocation setParameters: in_parameters];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) GetVersionInfo:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|GetVersionInfo */) in_parameters
{
    id result = NULL;    
    GetVersionInfo* _invocation = [[GetVersionInfo alloc] init];    
    [_invocation setParameters: in_parameters];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) GetGreatCircleDistances:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|GetGreatCircleDistances */) in_parameters
{
    id result = NULL;    
    GetGreatCircleDistances* _invocation = [[GetGreatCircleDistances alloc] init];    
    [_invocation setParameters: in_parameters];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) GetCountryRegionInfo:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|GetCountryRegionInfo */) in_parameters
{
    id result = NULL;    
    GetCountryRegionInfo* _invocation = [[GetCountryRegionInfo alloc] init];    
    [_invocation setParameters: in_parameters];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}



@end;

/*-
 *   Method Name:  FindAddress
 * Documentation:  Finds a list of addresses that match the input address.
 */
@implementation FindAddress
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|FindAddress */) in_parameters
{
    id _paramValues[] = {    
        in_parameters,        
    };    
    NSString* _paramNames[] = {    
        @"parameters",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"parameters"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://findv3.staging.mappoint.net/Find-30/FindService.asmx"            
                 methodName: @"FindAddress"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://s.mappoint.net/mappoint-30/FindAddress"            
            methodNamespace: NULL /* No Method Namespace specified */            
        ];        
}

@end; /* FindAddress */


/*-
 *   Method Name:  FindNearRoute
 * Documentation:  Finds points of interest locations within a specified distance from
 *                 a route.
 */
@implementation FindNearRoute
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|FindNearRoute */) in_parameters
{
    id _paramValues[] = {    
        in_parameters,        
    };    
    NSString* _paramNames[] = {    
        @"parameters",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"parameters"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://findv3.staging.mappoint.net/Find-30/FindService.asmx"            
                 methodName: @"FindNearRoute"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://s.mappoint.net/mappoint-30/FindNearRoute"            
            methodNamespace: NULL /* No Method Namespace specified */            
        ];        
}

@end; /* FindNearRoute */


/*-
 *   Method Name:  Find
 * Documentation:  Finds places based on the find options.
 */
@implementation Find
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|Find */) in_parameters
{
    id _paramValues[] = {    
        in_parameters,        
    };    
    NSString* _paramNames[] = {    
        @"parameters",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"parameters"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://findv3.staging.mappoint.net/Find-30/FindService.asmx"            
                 methodName: @"Find"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://s.mappoint.net/mappoint-30/Find"            
            methodNamespace: NULL /* No Method Namespace specified */            
        ];        
}

@end; /* Find */


/*-
 *   Method Name:  GetLocationInfo
 * Documentation:  Searches around a LatLong for nearest addresses and entities.
 */
@implementation GetLocationInfo
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|GetLocationInfo */) in_parameters
{
    id _paramValues[] = {    
        in_parameters,        
    };    
    NSString* _paramNames[] = {    
        @"parameters",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"parameters"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://findv3.staging.mappoint.net/Find-30/FindService.asmx"            
                 methodName: @"GetLocationInfo"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://s.mappoint.net/mappoint-30/GetLocationInfo"            
            methodNamespace: NULL /* No Method Namespace specified */            
        ];        
}

@end; /* GetLocationInfo */


/*-
 *   Method Name:  FindByProperty
 * Documentation:  Finds points of interest based on pre-defined or custom properties.
 *                 This method is independent of the location information such as
 *                 distance and latitude/logitude.
 */
@implementation FindByProperty
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|FindByProperty */) in_parameters
{
    id _paramValues[] = {    
        in_parameters,        
    };    
    NSString* _paramNames[] = {    
        @"parameters",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"parameters"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://findv3.staging.mappoint.net/Find-30/FindService.asmx"            
                 methodName: @"FindByProperty"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://s.mappoint.net/mappoint-30/FindByProperty"            
            methodNamespace: NULL /* No Method Namespace specified */            
        ];        
}

@end; /* FindByProperty */


/*-
 *   Method Name:  ParseAddress
 * Documentation:  Parses Address.FormattedAddress into its component Address pieces.
 */
@implementation ParseAddress
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|ParseAddress */) in_parameters
{
    id _paramValues[] = {    
        in_parameters,        
    };    
    NSString* _paramNames[] = {    
        @"parameters",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"parameters"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://findv3.staging.mappoint.net/Find-30/FindService.asmx"            
                 methodName: @"ParseAddress"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://s.mappoint.net/mappoint-30/ParseAddress"            
            methodNamespace: NULL /* No Method Namespace specified */            
        ];        
}

@end; /* ParseAddress */


/*-
 *   Method Name:  FindNearby
 * Documentation:  Find a list of POI, within a circle around a lat/long.
 */
@implementation FindNearby
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|FindNearby */) in_parameters
{
    id _paramValues[] = {    
        in_parameters,        
    };    
    NSString* _paramNames[] = {    
        @"parameters",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"parameters"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://findv3.staging.mappoint.net/Find-30/FindService.asmx"            
                 methodName: @"FindNearby"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://s.mappoint.net/mappoint-30/FindNearby"            
            methodNamespace: NULL /* No Method Namespace specified */            
        ];        
}

@end; /* FindNearby */


/*-
 *   Method Name:  FindByID
 * Documentation:  Finds points of interest for a given entity ID.
 */
@implementation FindByID
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|FindByID */) in_parameters
{
    id _paramValues[] = {    
        in_parameters,        
    };    
    NSString* _paramNames[] = {    
        @"parameters",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"parameters"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://findv3.staging.mappoint.net/Find-30/FindService.asmx"            
                 methodName: @"FindByID"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://s.mappoint.net/mappoint-30/FindByID"            
            methodNamespace: NULL /* No Method Namespace specified */            
        ];        
}

@end; /* FindByID */


/*-
 *   Method Name:  FindPolygon
 * Documentation:  Finds polygons containing a point or intersecting a rectangle.
 */
@implementation FindPolygon
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|FindPolygon */) in_parameters
{
    id _paramValues[] = {    
        in_parameters,        
    };    
    NSString* _paramNames[] = {    
        @"parameters",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"parameters"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://findv3.staging.mappoint.net/Find-30/FindService.asmx"            
                 methodName: @"FindPolygon"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://s.mappoint.net/mappoint-30/FindPolygon"            
            methodNamespace: NULL /* No Method Namespace specified */            
        ];        
}

@end; /* FindPolygon */



@implementation FindService

+ (id) FindAddress:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|FindAddress */) in_parameters
{
    id result = NULL;    
    FindAddress* _invocation = [[FindAddress alloc] init];    
    [_invocation setParameters: in_parameters];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) FindNearRoute:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|FindNearRoute */) in_parameters
{
    id result = NULL;    
    FindNearRoute* _invocation = [[FindNearRoute alloc] init];    
    [_invocation setParameters: in_parameters];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) Find:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|Find */) in_parameters
{
    id result = NULL;    
    Find* _invocation = [[Find alloc] init];    
    [_invocation setParameters: in_parameters];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) GetLocationInfo:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|GetLocationInfo */) in_parameters
{
    id result = NULL;    
    GetLocationInfo* _invocation = [[GetLocationInfo alloc] init];    
    [_invocation setParameters: in_parameters];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) FindByProperty:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|FindByProperty */) in_parameters
{
    id result = NULL;    
    FindByProperty* _invocation = [[FindByProperty alloc] init];    
    [_invocation setParameters: in_parameters];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) ParseAddress:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|ParseAddress */) in_parameters
{
    id result = NULL;    
    ParseAddress* _invocation = [[ParseAddress alloc] init];    
    [_invocation setParameters: in_parameters];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) FindNearby:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|FindNearby */) in_parameters
{
    id result = NULL;    
    FindNearby* _invocation = [[FindNearby alloc] init];    
    [_invocation setParameters: in_parameters];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) FindByID:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|FindByID */) in_parameters
{
    id result = NULL;    
    FindByID* _invocation = [[FindByID alloc] init];    
    [_invocation setParameters: in_parameters];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) FindPolygon:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|FindPolygon */) in_parameters
{
    id result = NULL;    
    FindPolygon* _invocation = [[FindPolygon alloc] init];    
    [_invocation setParameters: in_parameters];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}



@end;

/*-
 *   Method Name:  CalculateSimpleRoute
 * Documentation:  <no documentation>
 */
@implementation CalculateSimpleRoute
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|CalculateSimpleRoute */) in_parameters
{
    id _paramValues[] = {    
        in_parameters,        
    };    
    NSString* _paramNames[] = {    
        @"parameters",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"parameters"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://routev3.staging.mappoint.net/Route-30/RouteService.asmx"            
                 methodName: @"CalculateSimpleRoute"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://s.mappoint.net/mappoint-30/CalculateSimpleRoute"            
            methodNamespace: NULL /* No Method Namespace specified */            
        ];        
}

@end; /* CalculateSimpleRoute */


/*-
 *   Method Name:  CalculateRoute
 * Documentation:  <no documentation>
 */
@implementation CalculateRoute
- (void) setParameters:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|CalculateRoute */) in_parameters
{
    id _paramValues[] = {    
        in_parameters,        
    };    
    NSString* _paramNames[] = {    
        @"parameters",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"parameters"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://routev3.staging.mappoint.net/Route-30/RouteService.asmx"            
                 methodName: @"CalculateRoute"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://s.mappoint.net/mappoint-30/CalculateRoute"            
            methodNamespace: NULL /* No Method Namespace specified */            
        ];        
}

@end; /* CalculateRoute */



@implementation RouteService

+ (id) CalculateSimpleRoute:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|CalculateSimpleRoute */) in_parameters
{
    id result = NULL;    
    CalculateSimpleRoute* _invocation = [[CalculateSimpleRoute alloc] init];    
    [_invocation setParameters: in_parameters];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) CalculateRoute:(CFTypeRef /* Complex type http://s.mappoint.net/mappoint-30/|CalculateRoute */) in_parameters
{
    id result = NULL;    
    CalculateRoute* _invocation = [[CalculateRoute alloc] init];    
    [_invocation setParameters: in_parameters];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}



@end;


/*-
 * End of WSDL document at mappoint.wsdl
 */
